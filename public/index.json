[{"content":"Introduction If you are a hardware engineer you need no explanation though, this is more for the programming guys who attempt to make things with an FPGA in the belief that is the next step of Arduino (I do think that though, so no judgment made here)\nAs someone who wrote a lot of code in my young age (still loving fiddling with Linux kernel), I\u0026rsquo;m lucky I got the purpose of HDL.\nGiven the amount of times I have seen the question raised on stackoverflow or reddit on the struggle of programmers that approach the field of digital design, this is not a wasted question. So what is even HDL?\nWhat is HDL? Basically it stands for Hardware Definition Language. Still a language but not for programming on a Turin machine.\nSo, for the software programming team, but those who do real programming (hence know at least Lisp, preferable Haskell), this is kind of functional language. It is actually a netlist language, where you describe the connections of digital circuitry, input to the block (HDL module) and the outputs that will go somewhere. And this pretty much resembles the behavior of functions (more than zero inputs, at least one output). So, if you know your functionals languages, you will fare very well with HDL. Else I pretty much recommend Haskell as your next step in programming muscles.\nIn this blog I will mainly write in SystemVerilog, a superset of Verilog, which is one of the most popular hardware definition languages. The other one that is out there is VHDL. As usual, they both are capable of doing pretty much what\u0026rsquo;s needed for having the job done, it\u0026rsquo;s a matter of preference (or what you are forced to use in your workplace).\nWhat is this wire and reg In logic design you have ones and zeros. Sometimes some floating piece of metal that is not connected to anything of something which you can\u0026rsquo;t tell what\u0026rsquo;s the current state when you plug a supply (remember, we are still talking about circuits, forget definite initial states).\nA wire is an element that alike a real wire, can carry information from point A to point B. That\u0026rsquo;s all. In HDL, you need to define wires so that you can differentiate by labels the connections from one module to another. An example in here:\n1 2 3 4 wire bus_in1, bus_in2; wire bus_out; assign bus_out = and(bus_in1, bus_in2); Let me reiterate once again: we are dealing with logic, which is akin to functions (some inputs, at least one output). With wires, we defined where this and() element (the circuit for the logic AND operation) is connected. Perhaps also which whom.\nThey are just labels you use to identify connections\nInstead, the reg is just like a wire that can store its state, like a memory element. Here comes the confusion oftentimes, as a wire is not a complicated circuit, just a piece of conductor. Instead, whatever gets synthesized by a reg ends having some transistors. Hence, a reg will synthesize either a latch (a memory element that\u0026rsquo;s dependent on the level) or a flip-flop (a memory element that\u0026rsquo;s dependent on the transition of a control signal, almost always a clock).\nIf you don\u0026rsquo;t know what latches or flipflops are, here is a brief explanation:\nA latch is a memory element that sets the output equal to the input when actively driven. When no driving is given to the latch (no electrons in the input, or floating input) it preserves the last state. A flip-flop will propagate the state of the input to the output only when a transition either from zero to one (raising or positive edge) or from one to zero (falling or negative edge) happens.\nAs a general rule, in digital design you avoid latches as are very technology dependent on their implementation (they can be very power hungry sometimes). From now on let\u0026rsquo;s set the rule that we will try to synthesize only flip-flops.\nThey said HDL has intrinsic parallelism HLD are as much parallel as two logic gates working at the same time. You describe the logical circuits and nothing stops it from making two operations at the very same time (disregarding propagation delay in logic gates)\nSo can I do a for loop? Hardware Definition Language!\nTry to make a for loop out of AND/OR/NOT gates on a breadboard. Sure you can, but there are better ways to make a loop that save components (fewer components, less area, less power wasted, polar bears not floating around Sicily).\nYup, when you shitpost on reddit global warming send beards to Sicily\nHowever, for all the effects, HDL is capable of parsing a for loop, as it will infer the attempt of the engineer and generate the equivalent circuit that reproduces that behavior. You can pretty much describe the behavior of your circuit in HDL, no warranties that the synthesis will be the best one for a certain algorithm.\nAgain, team Haskell wins here against team Java (lol). Recursion basically is a way of making pipelines in digital design.\nSo, am I ready to write HDL after reading this? Let\u0026rsquo;s be honest: you were always ready to make digital circuits, just that your mindset was obfuscated by the prejudice that HDL are programming languages. Now that you know they aren\u0026rsquo;t, and you know that they basically describe the connections and/or behavior of logical circuits, the doors are open for you.\n","permalink":"https://danielhacks.it/blog/20250527_what-is-hdl/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you are a hardware engineer you need no explanation though, this is more for the programming guys who attempt to make things with an FPGA in the belief that is the next step of Arduino (I do think that though, so no judgment made here)\u003c/p\u003e\n\u003cp\u003eAs someone who wrote a lot of code in my young age (still loving fiddling with Linux kernel), I\u0026rsquo;m lucky I got the purpose of HDL.\u003c/p\u003e","title":"What Is HDL? The explanation you did not requested"},{"content":"Who am I? Valeggio, 2023\nI\u0026rsquo;m Daniel, a microelectronics engineer working on cutting edge optical links, but with a general passion for electronics since I was 13 years old. Based in Italy, from the best analog microelectronics school around (and they know it).\nWhat is this blog about In principle, I wanted to make a web log for my learning activity on digital design and FPGA. But well in the deep, I\u0026rsquo;m an analog circuit designer, and even deeper, a physicist. So I guess at some point the arguments will diverge onto many of my interests. But what blog writer doesn\u0026rsquo;t do that?\nWhy is this blog necessary? I used to write blogs back in the 2010s about machine learning, data science and numerical simulation of complex systems. With the years I moved onto different things and removed the blog references. But in the end I like the learning process that allows the writing and summarizing information. If other people can understand it, that means I got it right. Akin to the teacher learning from the student, just that the student is me as well.\nSo basically, it is necessary for me, but with the hope that the quality is high enough so that you can leverage on this information as well.\nWhy there is that little shack in the navbar? Among many of my dreams, there is this dream of going off the grid (partially). So I\u0026rsquo;m looking for ways to have this small house in the mountains, some mini cows, mini donkeys, goats, chickens and Wi-Fi to keep doing what I love. This blog itself is a move towards that future, hence I see the point on putting a symbol of my end goal somewhere around where I don\u0026rsquo;t lose sight of it.\nPublications 1 A 200Gb/s Low Power DSP-Based Optical Receiver and Transmitter with Integrated TIA and Laser Drivers\n2 A 5nm 60GS/s 7b 64-Way Time Interleaved Partial Loop Unrolled SAR ADC Achieving 34dB SNDR up to 32GHz\n3 A 5-nm 60-GS/s 7b 64-Way Time Interleaved Partial Loop Unrolled SAR ADC Achieving 35.2dB SNDR up to 32 GHz\n4 An Eight-Lane 800-Gb/s Transceiver for PAM-4 Optical Direct-Detection Applications in 5-nm FinFET Process\n","permalink":"https://danielhacks.it/about/","summary":"\u003ch2 id=\"who-am-i\"\u003eWho am I?\u003c/h2\u003e\n\u003cfigure class=\"align-center \"\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/itsmedaniel.jpg#center\"\n         alt=\"Personal shot\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eValeggio, 2023\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eI\u0026rsquo;m Daniel, a microelectronics engineer working on cutting edge optical links, but with a general passion for electronics since I was 13 years old. Based in Italy, from the best analog microelectronics school around (and they know it).\u003c/p\u003e\n\u003ch2 id=\"what-is-this-blog-about\"\u003eWhat is this blog about\u003c/h2\u003e\n\u003cp\u003eIn principle, I wanted to make a web log for my learning activity on digital design and FPGA. But well in the deep, I\u0026rsquo;m an analog circuit designer, and even deeper, a physicist. So I guess at some point the arguments will diverge onto many of my interests. But what blog writer doesn\u0026rsquo;t do that?\u003c/p\u003e","title":"About"},{"content":"Here is an organized collection of the resources I leverage when doing some kind of research. Google is obvious, so let\u0026rsquo;s skip it.\nGeneral Electronics Analog Electronics Digital Electronics ","permalink":"https://danielhacks.it/resources/","summary":"\u003cp\u003eHere is an organized collection of the resources I leverage when doing some kind of research. Google is obvious, so let\u0026rsquo;s skip it.\u003c/p\u003e\n\u003ch3 id=\"general-electronics\"\u003eGeneral Electronics\u003c/h3\u003e\n\u003ch3 id=\"analog-electronics\"\u003eAnalog Electronics\u003c/h3\u003e\n\u003ch3 id=\"digital-electronics\"\u003eDigital Electronics\u003c/h3\u003e","title":"Resources"},{"content":"Let me be brief, as this is just to fill the emptyness of a newly created blog: I want to learn new skills and take notes that can be shared with people in the hope they will find useful as well.\nIn this blog I have the plan to showcase my personal projects on electronics and perhaps other fields, maybe adding some of the knowledge I have accumulated in the last years in the field (if it doesn\u0026rsquo;t break any NDA, of course).\nWith this being said, have a good reading.\nWith regards\nDaniel\n","permalink":"https://danielhacks.it/blog/20250525_introduction/","summary":"\u003cp\u003eLet me be brief, as this is just to fill the emptyness of a newly created blog: I want to learn new skills and take notes that can be shared with people in the hope they will find useful as well.\u003c/p\u003e\n\u003cp\u003eIn this blog I have the plan to showcase my personal projects on electronics and perhaps other fields, maybe adding some of the knowledge I have accumulated in the last years in the field (if it doesn\u0026rsquo;t break any NDA, of course).\u003c/p\u003e","title":"Blog introduction"}]